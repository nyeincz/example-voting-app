pipeline {
    agent none

    stages {
        stage('Build'){
            agent{
                 docker{
                    image 'python:2.7.16-slim'
                    args '--user root'
                     }
            }
            when{
                changeset "**/vote/**"
            }
            steps {
                echo 'Compiling vote app..'
                dir('vote'){
                sh 'pip install -r requirements.txt' 
                }
            }
        }
        
        stage('Test') {
            agent{
                docker{
                    image 'python:2.7.16-slim'
                        args '--user root'
                     }
            }
            when{
                changeset "**/vote/**"
            }
            steps {
                echo 'Running Unit Tests on vote app.'
                 dir('vote'){
                sh 'pip install -r requirements.txt'
                sh 'nosetests -v' 
                }
            }
        }
        stage('docker-package'){
               agent any
            when{
                changeset "**/vote/**"
                branch 'master'
            }
            steps{
                echo 'Packaging Vote app with docker' 
                script{
                    docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin'){
                     def workerImage = docker.build("chanzin/vote:v${env.BUILD_ID}", "./vote")
                     workerImage.push()
                     workerImage.push("${env.BRANCH_NAME}")
                    }
                }
            }
        }
    }
    post{
        always{
            echo 'Pipeline for vote is completed.'
        }
    }
}
